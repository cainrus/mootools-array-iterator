(function(){var h={uid:Date.now(),getUniqueId:function(){return(this.uid++).toString(36)},Data:{},getData:function(a){return this.Data[a]},setData:function(a,c){return this.Data[a]=c}},k=new Class({Implements:[Options],options:{pit:false,limits:false,pass:[],chains:false},initialize:function(a,c){this.setOptions(c);var d=function(b){return b}.pass([h.getUniqueId()]);this.ref=function(){return this}.bind(a);this.jump=function(b){b=h.setData(d(),this.valid(b));return this.options.chains?this:this.current(b)};
this.key=function(){var b=d(),e=this.valid(h.getData(b));return h.setData(b,e)};with(this.options){min=[this.options.min,0].pick();max=[this.options.max,a.length-1].pick()}},valid:function(){var a=this.ref().length,c=arguments.length>0?Number.from(arguments[0]):this.key();if(c===null||a===0)return null;if(c<0)c=this.ref().length+c;if(c<0||c>a-1)return null;if(this.options.pass.indexOf(c)>-1)return null;var d=function(e){return typeof e!=="number"?null:e.limit(0,a)},b=d(this.options.min);d=d(this.options.max);
if(b&&c<b||d&&c>d)return null;return c},reset:function(){var a=this.range(1);return this.jump(a.length?a[0]:null)},rewind:function(){return this.jump(null)},end:function(){var a=this.range(1);a=a.length?a.pop():null;return this.jump(a),this.current(a)},next:function(){return this.slide(1)},prev:function(){return this.slide(-1)},current:function(a){a=a===void 0?this.key():this.valid(a);return a===null?null:this.ref()[a]},slide:function(a,c){var d=this.range(1).invoke("toInt"),b=[Number.from(c),this.key()].pick();
a=Number.from(a);var e=this.options.limits,f=this.options.pit;if(!d.length||a===null||e&&b===null&&a<0)return this.jump(null);if(a===0)return this.current();f&&d.unshift(null);var g=d.length-1;if(b===null){b=f?1:0;if(e){a--;b=f?1:0}else if(a<0){a++;b=g}else a--}else b=d.indexOf(b);if(!f&&!e&&a.abs()>=d.length)a%=d.length;b+=a;var i=b>g,j=b<0;if(i||j)if(f&&e)b=null;else if(i)b=e?g:b-g-1;else if(j)b=e?0:b+g+1;return this.jump(d[b])},range:function(a){var c=this.ref(),d=c.length-1,b=Object.keys(c);a=
!a;with(this.options){if(d<0)return[];pass=Array.from(pass).invoke("toString");[min,max].each(function(e){[Number.from(e),0].pick().limit(0,d)});range=min>max?b.slice(0,max.toInt()+1).combine(b.slice(min,max+1)):b.slice(min,max+1);pass.length>0&&pass.each(function(e){range=range.erase(e)});if(a)range=range.map(function(e){return c[e]});return range}}});Array.implement({iterator:function(a){return new k(this,a)}})})();